name: Deploy to FTP

# Trigger da action - executa em push na branch master
on:
  push:
    branches: [ master, main ]
  workflow_dispatch: # Permite execu√ß√£o manual

jobs:
  deploy:
    name: Deploy to FTP Server
    runs-on: ubuntu-latest
    
    steps:
    # Checkout do c√≥digo
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Setup Node.js (caso precise de build)
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
      if: false # Mude para true se usar Node.js

    # Instalar depend√™ncias (se necess√°rio)
    - name: Install Dependencies
      run: npm ci
      if: false # Mude para true se usar Node.js

    # Build do projeto (se necess√°rio)
    - name: Build Project
      run: npm run build
      if: false # Mude para true se usar Node.js

    # Preparar arquivos para deploy
    - name: Prepare Files
      run: |
        # Remover arquivos que n√£o devem ir para produ√ß√£o
        rm -f .gitignore
        rm -f .gitignire
        rm -rf .git
        rm -rf .github
        rm -f README.md
        
        # Criar estrutura de diret√≥rios se necess√°rio
        mkdir -p deploy
        
        # Copiar arquivos para pasta de deploy
        cp -r * deploy/ 2>/dev/null || true
        
        # Listar arquivos que ser√£o enviados
        echo "Arquivos que ser√£o enviados:"
        find deploy -type f | head -20

    # Deploy via FTP usando lftp
    - name: Deploy via FTP
      uses: sebastianpopp/ftp-action@releases/v2
      with:
        host: ${{ secrets.FTP_SERVER }}
        user: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        localDir: "."
        remoteDir: ${{ secrets.FTP_REMOTE_DIR }}
        options: "--delete --verbose"

    # Alternativa usando SamKirkland/FTP-Deploy-Action (mais popular)
    - name: Deploy via FTP Alternative
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      if: false # Mude para true para usar esta alternativa
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        server-dir: ${{ secrets.FTP_REMOTE_DIR }}
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          **/.DS_Store
          **/.vscode/**
          **/README.md
          **/.github/**

    # Notifica√ß√£o de sucesso
    - name: Notify Success
      if: success()
      run: |
        echo "‚úÖ Deploy realizado com sucesso!"
        echo "üöÄ Site atualizado em: $(date)"
        echo "üìù Commit: ${{ github.sha }}"
        echo "üë§ Por: ${{ github.actor }}"

    # Notifica√ß√£o de erro
    - name: Notify Failure
      if: failure()
      run: |
        echo "‚ùå Falha no deploy!"
        echo "üîç Verifique os logs acima para mais detalhes"